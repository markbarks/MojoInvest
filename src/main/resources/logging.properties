# A default java.util.logging configuration.
# (All App Engine logging is through java.util.logging by default).
#
# To use this configuration, copy it into your application's WEB-INF
# folder and add the following to your appengine-web.xml:
#
# <system-properties>
#   <property name="java.util.logging.config.file" value="WEB-INF/logging.properties"/>
# </system-properties>
#

# Default global logging level.
# Loggers and Handlers may override this level
.level = INFO


# Global logging properties.
# ------------------------------------------
# The set of handlers to be loaded upon startup.
# Comma-separated list of class names.
# (? LogManager docs say no comma here, but JDK example has comma.)
handlers=java.util.logging.ConsoleHandler

# Loggers
# ------------------------------------------
# Loggers are usually attached to packages.
# Here, the level for each package is specified.
# The global level is used by default, so levels
# specified here simply acskt as an override.
#com.google.apphosting.utils.jetty.level=INFO
com.google.apphosting.level = INFO
com.google.appengine.tools.pipeline.level = INFO
com.mns.mojoinvest.level = INFO

# Handlers
# -----------------------------------------

# --- ConsoleHandler ---
# Override of global logging level
#java.util.logging.ConsoleHandler.level=SEVERE
java.util.logging.ConsoleHandler.level=ALL
#java.util.logging.ConsoleHandler.formatter=com.google.appengine.tools.pipeline.DebugLogMessageFormatter
#java.util.logging.ConsoleHandler.formatter=com.mns.mojoinvest.server.logging.BriefLogFormatter


